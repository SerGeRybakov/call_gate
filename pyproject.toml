[tool.poetry]
name = "sliding-window"
version = "0.0.0"
description = "Sliding Window Time Bound Counter"
authors = ["Sergey Rybakov <srybakov@openweathermap.org>"]
readme = "README.md"
license = "GPL-3.0-only"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Operating System :: Unix",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Windows",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
]

[tool.poetry-dynamic-versioning]
vcs = "git"
style = "semver"
metadata = false

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
redos = ["redis"]
numpy = ["numpy"]

[tool.poetry.dependencies]
python = "^3.9"
typing-extensions = "^4.12.2"
redis = { version = "^5.2.1" , optional = true}
numpy = { version = ">=1.24 <3" , optional = true}

[tool.poetry.group.dev.dependencies]
python-dateutil = "^2.9.0.post0"
black = "^24.10.0"
coverage = "^7.1.0"
darglint = "^1.8.1"
Flake8-pyproject = "^1.2.3"
flake8 = "^5.0.4"
flake8-bugbear = "^23.1.20"
flake8-docstrings = "^1.7.0"
flake8-import-order = "^0.18.2"
flake8-pytest-style = "^1.7.0"
isort = "^5.12.0"
mypy = "^1.0.0"
mypy-extensions = "^1.0.0"
pep8-naming = "^0.13.3"
pre-commit = "^3.0.4"
pycln = "^2.1.3"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pytest-sugar = "^0.9.6"
pytest-random-order = "^1.1.0"
ssort = "^0.14.0"
deepdiff = "^6.3.0"
pytest-deadfixtures = "^2.2.1"
pytest-timeout = "^2.3.1"
bandit = "^1.7.5"
deptry = "^0.6.4"


[tool.poetry.group.docs.dependencies]
docutils = "^0.17"
m2r2 = "^0.3.2"
sphinx-rtd-theme = "^1.2.2"
enum_tools = "^0.10.0"
sphinx_toolbox = "^3.5.0"
doc8 = "^0.11.2"

#############
### TOOLS ###
#############

##############
# FORMATTERS #
##############

[tool.black]  # code formatter
target-version = ['py39']
line-length = 120

[tool.isort]  # imports sorter
# https://pycqa.github.io/isort/
py_version = 39
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'FIRSTPARTY', 'LOCALFOLDER']
profile = "black"
atomic = true
include_trailing_comma = true
line_length = 120
lines_after_imports = 2
lines_between_types = 1
multi_line_output = 3
extend_skip = [".md", ".json"]
known_local_folder = ["sliding_window"]
extra_standard_library = ["zoneinfo"]
use_parentheses = true

###########
# LINTERS #
###########

[tool.mypy]  # code linter
# https://mypy.readthedocs.io/en/stable/
# https://pypi.org/project/mypy-extensions/
python_version = "3.9"
ignore_missing_imports = true
scripts_are_modules = true
allow_redefinition = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_no_return = false
show_error_context = true
show_column_numbers = true
show_error_codes = true
color_output = false
pretty = true
exclude = [
  '^setup\.py$',
  '^tmp\.py$',
  '^venv/',
  '^.venv/',
  '^test+\.py$',
  '^conftest\.py$',
  '^tmp/',
]
disable_error_code = "misc,no-redef,override,union-attr,index,assignment"

[[tool.mypy.overrides]]
module = "tests/*"
disallow_untyped_defs = false

[tool.flake8]  # code linter
# https://flake8.pycqa.org/en/latest/
# https://pypi.org/project/flake8-bugbear
# https://pypi.org/project/flake8-docstrings/
# https://pypi.org/project/flake8-import-order/
# https://pypi.org/project/flake8-pytest-style/
# https://pypi.org/project/pep8-naming/
min_python_version = 3.9
max-complexity = 14
max-doc-length = 120
max-line-length = 120
strictness = "full"
docstring_style = "sphinx"
docstring-convention = "pep257"
application_import_names = "sliding_window"
import-order-style = "pycharm"
exclude = [
  "venv/*",
  ".venv/*",
  ".git/*",
  "__pycache__/*",
  ".mypy_cache/*",
  ".pytest_cache/*",
  ".idea/*",
  "examples/*",
  "templates",
  "tmp/*",
  "tests/*",
  "tmp.py",
]

extend-select = ["D417"]
per-file-ignores = [
  "settings.py:"
]
ignore = [
  "B012",
  "B019",
  "D100",
  "D104",
  "D105",
  "D106",
  "D107",
  "D203",
  "D401",
  "D403",
  "D404",
  "DAR002",
  "DAR003",
  "DAR104",
  "DAR105",
  "DAR201",
  "DAR301",
  "DAR401",
  "DAR402",
  "DAR501",
  "E203",
  "E231",
  "E702",
  "I101",
  "I201",
  "I202",
  "N807",
  "N813",
  "N818",
  "W503",
  "W504",
]

[tool.pycln]  # imports linter
# https://hadialqattan.github.io/pycln/#/README
all = true
diff = true
exclude = "venv/*,.venv/*,.git/*,__pycache__/*,examples/*"

[tool.doc8]  # RST linter
# https://github.com/PyCQA/doc8
max-line-length = 120

[tool.bandit]  # security linter
# https://github.com/PyCQA/bandit
skips = ["B324"]


#########
# TESTS #
#########

[tool.pytest.ini_options]  # pytest
# https://docs.pytest.org
# https://pypi.org/project/pytest-asyncio/
# https://pytest-cov.readthedocs.io/en/latest/
# https://pypi.org/project/pytest-pythonpath/
# https://pypi.org/project/pytest-sugar/
minversion = 7.0
asyncio_mode = "auto"
addopts = ["--ignore=tmp.py"]
norecursedirs = "data"
testpaths = "./tests"

#log_cli = false
#log_cli_level = "ERROR"
show_capture = "no"

pythonpath = ["./sliding_window", "./.venv", "./venv"]
filterwarnings = ["ignore::UserWarning", 'ignore::DeprecationWarning', "ignore::ResourceWarning"]

[tool.coverage.run]  # coverage
source = ["sliding_window"]
branch = true
omit = [
  "*/__init__.py",
  "tests/*",
  "tmp.py",
]

[tool.coverage.html]
directory = "tests/code_coverage"

[tool.coverage.report]
fail_under = 100
exclude_lines = [
  "no cov",
  "pragma: no cover",
  "if typing.TYPE_CHECKING:",
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
  "pass",
  "raise NotImplementedError",
  "except ImportError",
  "except ModuleNotFoundError",
  "except Exception"
]
